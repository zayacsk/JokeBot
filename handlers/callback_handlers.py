import logging
from telebot import types
from firebase import approve_joke, delete_joke, find_joke_by_key, initialize_firebase
from keyboards import create_admin_keyboard, create_moderation_reply_keyboard
from states import get_user_state, set_user_state, delete_user_state
from utils import log_message
from async_utils import run_async
import config

logger = logging.getLogger(__name__)

def setup_callback_handlers(bot):
    @bot.callback_query_handler(func=lambda call: call.data.startswith('delete:'))
    def handle_joke_delete(call):
        run_async(process_joke_delete(bot, call))
        
    @bot.callback_query_handler(func=lambda call: call.data in ['approve', 'reject', 'skip', 'cancel_mod'])
    def handle_moderation_actions(call):
        # –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–µ–Ω, –Ω–æ –æ—Å—Ç–∞–≤–∏–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –î–µ–π—Å—Ç–≤–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—É—é –º–æ–¥–µ—Ä–∞—Ü–∏—é")
        
    @bot.callback_query_handler(func=lambda call: call.data.startswith('moderate:'))
    def handle_moderate_callback(call):
        run_async(process_moderate_callback(bot, call))

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
async def process_joke_delete(bot, call):
    try:
        user_id = call.from_user.id
        joke_key = call.data.split(':')[1]
        
        user_state = get_user_state(user_id)
        if not user_state or 'jokes' not in user_state:
            bot.answer_callback_query(call.id, "‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞")
            return
        
        if joke_key not in user_state['jokes']:
            bot.answer_callback_query(call.id, "‚ùå –ê–Ω–µ–∫–¥–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        root_ref = initialize_firebase()
        try:
            jokes_ref = root_ref.child('jokes')
            jokes_ref.child(joke_key).delete()
            logger.info(f"User {user_id} deleted joke {joke_key}")
        except Exception as e:
            logger.error(f"Error deleting joke: {e}")
            bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏")
            return
        
        delete_user_state(user_id)
        
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text="‚úÖ –ê–Ω–µ–∫–¥–æ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!"
        )
    except Exception as e:
        logger.error(f"Error in handle_joke_delete: {e}")
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

async def process_moderate_callback(bot, call):
    try:
        joke_key = call.data.split(':')[1]
        user_id = call.from_user.id
        
        if user_id not in config.ADMIN_IDS:
            bot.answer_callback_query(call.id, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç—ã")
            return
        
        root_ref = initialize_firebase()
        joke = await find_joke_by_key(root_ref, joke_key)
        
        if not joke:
            bot.answer_callback_query(call.id, "‚ùå –ê–Ω–µ–∫–¥–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –ø—Ä–æ–º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        set_user_state(user_id, {
            'state': 'moderation',
            'current_joke_key': joke_key,
            'joke_id': joke.get('joke_id', 'N/A')
        })
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"üìú *–ê–Ω–µ–∫–¥–æ—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (ID –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è):*\n\n{joke['text']}",
            parse_mode='Markdown',
            reply_markup=None  # –£–±–∏—Ä–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(
            call.message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –∞–Ω–µ–∫–¥–æ—Ç–∞:",
            reply_markup=create_moderation_reply_keyboard()
        )
        
        bot.answer_callback_query(call.id)
    except Exception as e:
        logger.error(f"Error in process_moderate_callback: {e}")
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")