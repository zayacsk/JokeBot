import logging

logger = logging.getLogger(__name__)

def setup_error_handlers(bot):
    @bot.callback_query_handler(func=lambda call: True)
    def handle_unmatched_callback(call):
        logger.warning(f"Unmatched callback: {call.data}")
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

    @bot.message_handler(func=lambda message: True)
    def handle_unmatched_messages(message):
        logger.warning(f"Unmatched message: {message.text}")
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≥—Ä—É–ø–ø–æ–≤—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
        if message.chat.type in ['group', 'supergroup']:
            return
        
        if message.text and message.text.startswith('/'):
            bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
        else:
            bot.reply_to(message, "ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ /help")