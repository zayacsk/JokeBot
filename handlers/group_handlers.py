import logging
import re
from telebot import types
import config
from firebase import initialize_firebase, get_random_joke, subscribe_group, unsubscribe_group
from utils import log_message, is_group_admin, last_joke_cache
from async_utils import run_async

logger = logging.getLogger(__name__)


def setup_group_handlers(bot):
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞ (—á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å –≤ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö –ø—Ä–∏ –≤–≤–æ–¥–µ /)
    bot.set_my_commands([
        types.BotCommand("joke", "–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç"),
        types.BotCommand("subscribe_group", "–ü–æ–¥–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É –Ω–∞ –∞–Ω–µ–∫–¥–æ—Ç—ã"),
        types.BotCommand("unsubscribe_group", "–û—Ç–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É –æ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤"),
        types.BotCommand("help", "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
    ], scope=types.BotCommandScopeAllGroupChats())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥ –≤ –≥—Ä—É–ø–ø–∞—Ö
    @bot.message_handler(commands=['joke', 'subscribe_group', 'unsubscribe_group', 'help', 'start'],
                         chat_types=['group', 'supergroup'])
    def handle_group_commands(message):
        log_message(logger, message)
        command = message.text.split()[0].lower()
        bot_username = bot.get_me().username.lower()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –±–æ—Ç–∞
        if command == '/joke' or command == f'/joke@{bot_username}':
            run_async(process_manual_joke_request(bot, message))
        elif command == '/subscribe_group' or command == f'/subscribe_group@{bot_username}':
            run_async(process_subscribe_group(bot, message))
        elif command == '/unsubscribe_group' or command == f'/unsubscribe_group@{bot_username}':
            run_async(process_unsubscribe_group(bot, message))
        elif command == '/help' or command == f'/help@{bot_username}' or \
                command == '/start' or command == f'/start@{bot_username}':
            run_async(process_send_group_help(bot, message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö (—Ç—Ä–∏–≥–≥–µ—Ä –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º)
    @bot.message_handler(
        func=lambda m: m.chat.type in ['group', 'supergroup'] and
                       any(word in (m.text or '').lower() for word in config.GROUP_TRIGGER_WORDS) and
                       not m.text.startswith('/')  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    )
    def group_trigger(message):
        log_message(logger, message)
        run_async(process_group_trigger(bot, message))


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
async def process_group_trigger(bot, message):
    try:
        chat_id = message.chat.id
        root_ref = initialize_firebase()

        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–π —à—É—Ç–∫–∏ –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        last_joke_id = last_joke_cache.get(chat_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —à—É—Ç–∫—É, –∏—Å–∫–ª—é—á–∞—è –ø–æ—Å–ª–µ–¥–Ω—é—é
        joke = await get_random_joke(root_ref, exclude_joke_id=last_joke_id)

        if not joke:
            bot.reply_to(message, "üò¢ –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤!")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        last_joke_cache[chat_id] = joke['joke_id']

        bot.reply_to(
            message,
            f"üìú *–ê–Ω–µ–∫–¥–æ—Ç #{joke['joke_id']}*\n\n{joke['text']}",
            parse_mode='Markdown'
        )
    except Exception as e:
        logger.error(f"Error in group_trigger: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞")


async def process_manual_joke_request(bot, message):
    try:
        chat_id = message.chat.id
        root_ref = initialize_firebase()

        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–π —à—É—Ç–∫–∏ –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        last_joke_id = last_joke_cache.get(chat_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —à—É—Ç–∫—É, –∏—Å–∫–ª—é—á–∞—è –ø–æ—Å–ª–µ–¥–Ω—é—é
        joke = await get_random_joke(root_ref, exclude_joke_id=last_joke_id)

        if not joke:
            bot.reply_to(message, "üò¢ –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤!")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        last_joke_cache[chat_id] = joke['joke_id']

        bot.reply_to(
            message,
            f"üìú *–ê–Ω–µ–∫–¥–æ—Ç #{joke['joke_id']}*\n\n{joke['text']}",
            parse_mode='Markdown'
        )
    except Exception as e:
        logger.error(f"Error in manual_joke_request: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞")


async def process_subscribe_group(bot, message):
    try:
        if not is_group_admin(bot, message.chat, message.from_user.id):
            bot.reply_to(message, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å –Ω–∞ –∞–Ω–µ–∫–¥–æ—Ç—ã.")
            return

        root_ref = initialize_firebase()
        group_name = message.chat.title
        if await subscribe_group(root_ref, message.chat.id, group_name):
            bot.reply_to(
                message,
                f"‚úÖ –ì—Ä—É–ø–ø–∞ '{group_name}' –ø–æ–¥–ø–∏—Å–∞–Ω–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã!\n"
                "–¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç—ã –≤ —ç—Ç–æ—Ç —á–∞—Ç.\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /unsubscribe_group —á—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è."
            )
        else:
            bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"Error in subscribe_group: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø—ã")


async def process_unsubscribe_group(bot, message):
    try:
        if not is_group_admin(bot, message.chat, message.from_user.id):
            bot.reply_to(message, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç –æ—Ç–ø–∏—Å—ã–≤–∞—Ç—å –æ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.")
            return

        root_ref = initialize_firebase()
        group_name = message.chat.title
        if await unsubscribe_group(root_ref, message.chat.id):
            bot.reply_to(
                message,
                f"‚ùå –ì—Ä—É–ø–ø–∞ '{group_name}' –æ—Ç–ø–∏—Å–∞–Ω–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤.\n"
                "–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /subscribe_group."
            )
        else:
            bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"Error in unsubscribe_group: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø—ã")


async def process_send_group_help(bot, message):
    try:
        text = (
            "ü§ñ *–ü–æ–º–æ—â—å –¥–ª—è –≥—Ä—É–ø–ø*\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
            "*/joke* - –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç\n"
            "*/subscribe_group* - –ø–æ–¥–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã\n"
            "*/unsubscribe_group* - –æ—Ç–ø–∏—Å–∞—Ç—å –≥—Ä—É–ø–ø—É –æ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –∞–Ω–µ–∫–¥–æ—Ç–æ–≤\n"
            "*/help* - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≥—Ä—É–ø–ø—ã —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n"
            "*/subscribe_group* –∏ */unsubscribe_group* –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π.\n\n"
            "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –≤–≤–µ–¥–∏—Ç–µ / –≤ –ø–æ–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è."
        )
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='Markdown'
        )
    except Exception as e:
        logger.error(f"Error in send_group_help: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–º–æ—â–∏")